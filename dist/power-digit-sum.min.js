"use strict";var _slicedToArray=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,s=!1,a=void 0;try{for(var i,o=e[Symbol.iterator]();!(r=(i=o.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){s=!0,a=e}finally{try{!r&&o.return&&o.return()}finally{if(s)throw a}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},_createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var PowerDigitSum=function(){var e=function(){function e(s){var a=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(_classCallCheck(this,e),!s)throw"No name argument";this.name=s,this.element=n(this,this.render()),this.elements=r(this.element,s),null!=i&&(this.data=i),this.style&&t(this.style()),this.element.addEventListener("set-data",function(e){return a.data=e.detail})}return _createClass(e,[{key:"class",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return this.name+(e?"__"+e:"")+(t?"_"+t:"")}},{key:"render",value:function(){throw"render() is not implemented"}},{key:"data",get:function(){throw"get data() is not implemented"},set:function(e){throw"set data() is not implemented"}}]),e}(),t=function(e){if(!Array.from(document.head.querySelectorAll("style")).some(function(t){return t.textContent==e})){var t=document.createElement("style");t.textContent=e,document.head.appendChild(t)}},n=function(e,t){var n=document.createElement("div");return n.innerHTML=t,n.firstElementChild.component=e,n.firstElementChild},r=function(e,t){var n={};return Array.from(e.querySelectorAll("[class^="+t+"__]")).forEach(function(e){Array.from(e.classList).forEach(function(t){var r=t.split("__",2)[1].split("_",1)[0].replace(/-(.)/g,function(e,t){return t.toUpperCase()});n[r]?Array.isArray(n[r])?n[r].push(e):n[r]=[n[r],e]:n[r]=e})}),n},s=function(e,t){return Array.from(Array(t)).reduce(function(t){return n=e,("0"+t).split("").reverse().reduce(function(e,t){var r=_slicedToArray(e,2),s=r[0],a=r[1],i=(parseInt(t)*n+a).toString();return[s.concat(parseInt(i.slice(-1))),parseInt(i.slice(0,-1)||"0")]},[[],0])[0].reverse().join("").replace(/^0/,"");var n},"1")};return function(t){function n(){_classCallCheck(this,n);var e=_possibleConstructorReturn(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,"digit-sum"));return e.elements.exponent.addEventListener("input",function(t){e.update(parseInt(t.target.value,10),t.target.validity.valid)}),e}return _inherits(n,e),_createClass(n,[{key:"render",value:function(){return'\n    <div class="'+this.class()+'">\n      <div class="'+this.class("row")+'">\n        <span class="'+this.class("base")+'">2</span>\n        <input autofocus class="'+this.class("exponent")+'" max="250" min="10" required type="number">\n      </div>\n      <div class="'+this.class("row")+'">\n        <span class="'+this.class("label")+'">Digit:</span>\n        <span class="'+this.class("power")+'"></span>\n      </div>\n      <div class="'+this.class("row")+'">\n        <span class="'+this.class("label")+'">Sum:</span>\n        <span class="'+this.class("sum")+'"></span>\n      </div>\n    </div>\n    '}},{key:"style",value:function(){return"\n    ."+this.class("base")+" {\n      font-size: larger;\n    }\n    ."+this.class("exponent")+" {\n      vertical-align: super;\n    }\n    "}},{key:"update",value:function(e,t){var n=s(2,e);this.elements.power.textContent=t?n:"",this.elements.sum.textContent=t?n.toString().split("").reduce(function(e,t){return e+parseInt(t)},0):""}}]),n}()}();
//# sourceMappingURL=power-digit-sum.min.js.map