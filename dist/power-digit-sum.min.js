"use strict";var _slicedToArray=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,s=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){s=!0,a=e}finally{try{!r&&l.return&&l.return()}finally{if(s)throw a}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},_createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var PowerDigitSum=function(){var e=function(){function e(t){if(_classCallCheck(this,e),!t)throw"No class argument";this.class=t,this.style&&this.createStyle(),this.element=this.createElement(),this.elements=this.queryElements()}return _createClass(e,[{key:"createElement",value:function(){var e=document.createElement("div");return e.innerHTML=this.render(),e.firstElementChild}},{key:"createStyle",value:function(){var e=this.style();if(!Array.from(document.head.querySelectorAll("style")).some(function(t){return t.textContent==e})){var t=document.createElement("style");t.textContent=e,document.head.appendChild(t)}}},{key:"queryElements",value:function(){var e={};return Array.from(this.element.querySelectorAll("[class^="+this.class+"__]")).forEach(function(t){var n=t.className.split("__",2)[1].split("_",1)[0];e[n]?Array.isArray(e[n])?e[n].push(t):e[n]=[e[n],t]:e[n]=t}),e}},{key:"render",value:function(){throw"render() is not implemented"}}]),e}(),t=function(e,t){return Array.from(Array(t)).reduce(function(t){return n=e,("0"+t).split("").reverse().reduce(function(e,t){var r=_slicedToArray(e,2),s=r[0],a=r[1],i=(parseInt(t)*n+a).toString();return[s.concat(parseInt(i.slice(-1))),parseInt(i.slice(0,-1)||"0")]},[[],0])[0].reverse().join("").replace(/^0/,"");var n},"1")};return function(n){function r(){_classCallCheck(this,r);var e=_possibleConstructorReturn(this,(r.__proto__||Object.getPrototypeOf(r)).call(this,"digit-sum"));return e.elements.exponent.addEventListener("input",function(t){e.update(parseInt(t.target.value,10),t.target.validity.valid)}),e}return _inherits(r,e),_createClass(r,[{key:"render",value:function(){return'\n    <div class="'+this.class+'">\n      <div class="'+this.class+'__row">\n        <span class="'+this.class+'__base">2</span>\n        <input class="'+this.class+'__exponent" max="250" min="10" required type="number">\n      </div>\n      <div class="'+this.class+'__row">\n        <span class="'+this.class+'__label">Digit:</span>\n        <span class="'+this.class+'__power"></span>\n      </div>\n      <div class="'+this.class+'__row">\n        <span class="'+this.class+'__label">Sum:</span>\n        <span class="'+this.class+'__sum"></span>\n      </div>\n    </div>\n    '}},{key:"style",value:function(){return"\n    ."+this.class+"__base {\n      font-size: larger;\n    }\n    ."+this.class+"__exponent {\n      vertical-align: super;\n    }\n    "}},{key:"update",value:function(e,n){var r=t(2,e);this.elements.power.textContent=n?r:"",this.elements.sum.textContent=n?r.toString().split("").reduce(function(e,t){return e+parseInt(t)},0):""}}]),r}()}();
//# sourceMappingURL=power-digit-sum.min.js.map